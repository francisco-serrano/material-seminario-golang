// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-11-10 19:41:27.524643 -0300 -03 m=+0.030463001

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/messages": {
            "get": {
                "description": "Obtains the internal structure in charge of message storage",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/views.GetMessagesResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a message into internal structure",
                "parameters": [
                    {
                        "description": "Add Message Request",
                        "name": "message",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/views.AddMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/views.AddMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/messages/{id}": {
            "get": {
                "description": "Gets a message by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MessageID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/views.GetMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/views.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Message": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "text": {
                    "type": "string",
                    "example": "hello how are you"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2019-10-28T14:20:37.170146584-03:00"
                }
            }
        },
        "views.AddMessageRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "this is a sample message"
                }
            }
        },
        "views.AddMessageResponse": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "object",
                    "$ref": "#/definitions/models.Message"
                }
            }
        },
        "views.ErrorResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "invalid json"
                }
            }
        },
        "views.GetMessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "object",
                    "$ref": "#/definitions/models.Message"
                }
            }
        },
        "views.GetMessagesResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Message"
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Swagger Example API",
	Description: "Sample API to demonstrate how we can generate documentation with Swagger",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
